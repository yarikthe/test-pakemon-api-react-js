{"version":3,"file":"react-multi-select-component.cjs.production.min.js","sources":["../src/lib/fuzzy-match-utils.tsx","../src/lib/get-string.tsx","../src/select-panel/cross.tsx","../src/select-panel/index.tsx","../src/select-panel/default-item.tsx","../src/select-panel/select-item.tsx","../src/select-panel/select-list.tsx","../src/lib/debounce.tsx","../src/multi-select/arrow.tsx","../src/multi-select/loading.tsx","../src/multi-select/dropdown.tsx","../src/multi-select/header.tsx","../src/multi-select/index.tsx"],"sourcesContent":["import { Option } from \"./interfaces\";\n\n/**\n * A collection of string matching algorithms built with React Select in mind.\n */\n\n// Option type from React Select and similar libraries.\ntype MapOfStrings = { [key: string]: string };\n\n/**\n * Filters React Select options and sorts by similarity to a search filter.\n * Handles partial matches, eg. searching for \"Waberg High\" will find \"Raoul\n * Wallenberg Traditional High School\". Case insensitive. Ignores\n * non-alphanumeric characters.\n *\n * @param  options  An unfiltered list of Options.\n * @param? filter  A string to compare against Option labels.\n * @param? substitutions  Strings with multiple spellings or variations that we\n *           expect to match, eg. accented characters or abbreviated words.\n *\n * @return A filtered and sorted array of Options.\n */\nexport function filterOptions(\n  options: Option[],\n  filter?: string,\n  substitutions?: MapOfStrings\n): Option[] {\n  // If the filter is blank, return the full list of Options.\n  if (!filter) {\n    return options;\n  }\n\n  const cleanFilter = cleanUpText(filter, substitutions);\n  return (\n    options\n      // Filter out undefined or null Options.\n      .filter(({ label, value }) => label != null && value != null)\n      // Create a {score, Option} pair for each Option based on its label's\n      // similarity to the filter text.\n      .map((option) => ({\n        option: option,\n        score: typeaheadSimilarity(\n          cleanUpText(option.label, substitutions),\n          cleanFilter\n        ),\n      }))\n      // Only include matches of the entire substring, with a slight\n      // affordance for transposition or extra characters.\n      .filter((pair) => pair.score >= cleanFilter.length - 2)\n      // Sort 'em by order of their score.\n      .sort((a, b) => b.score - a.score)\n      // …and grab the original Options back from their pairs.\n      .map((pair) => pair.option)\n  );\n}\n\n/**\n * Scores the similarity between two strings by returning the length of the\n * longest common subsequence. Intended for comparing strings of different\n * lengths; eg. when matching a typeahead search input with a school name.\n\n * Meant for use in an instant search box where results are being fetched\n * as a user is typing.\n *\n * @param  a  The longer string (though, we flip them if it's shorter).\n * @param  b  The shorter string, eg. a typeahead search input.\n *\n * @return The length of the longest common subsequence. Higher scores indicate\n *           closer matches.\n */\nexport function typeaheadSimilarity(a: string, b: string): number {\n  const aLength = a.length;\n  const bLength = b.length;\n  const table: any[] = [];\n\n  if (!aLength || !bLength) {\n    return 0;\n  }\n\n  // Ensure `a` isn't shorter than `b`.\n  if (aLength < bLength) {\n    [a, b] = [b, a];\n  }\n\n  // Early exit if `a` includes `b`; these will be scored higher than any\n  // other options with the same `b` (filter string), with a preference for\n  // shorter `a` strings (option labels).\n  if (a.indexOf(b) !== -1) {\n    return bLength + 1 / aLength;\n  }\n\n  // Initialize the table axes:\n  //\n  //    0 0 0 0 ... bLength\n  //    0\n  //    0\n  //\n  //   ...\n  //\n  // aLength\n  //\n  for (let x = 0; x <= aLength; ++x) {\n    table[x] = [0];\n  }\n  for (let y = 0; y <= bLength; ++y) {\n    table[0][y] = 0;\n  }\n\n  // Populate the rest of the table with a dynamic programming algorithm.\n  for (let x = 1; x <= aLength; ++x) {\n    for (let y = 1; y <= bLength; ++y) {\n      table[x][y] =\n        a[x - 1] === b[y - 1]\n          ? 1 + table[x - 1][y - 1]\n          : Math.max(table[x][y - 1], table[x - 1][y]);\n    }\n  }\n\n  return table[aLength][bLength];\n}\n\n/**\n * Apply string substitutions, remove non-alphanumeric characters, and convert\n * all letters to uppercase.\n *\n * eg. 'Scoil Bhríde Primary School' may become 'SCOILBHRIDEPRIMARYSCHOOL'.\n *\n * @param  input  An unsanitized input string.\n * @param  substitutions  Strings with multiple spellings or variations that we\n *          expect to match, for example accented characters or abbreviated\n *          words.\n *\n * @return The sanitized text.\n */\nexport function cleanUpText(\n  input?: string,\n  substitutions?: MapOfStrings\n): string {\n  if (!input) {\n    return \"\";\n  }\n\n  // Uppercase and remove all non-alphanumeric, non-accented characters.\n  // Also remove underscores.\n  input = input.toUpperCase().replace(/((?=[^\\u00E0-\\u00FC])\\W)|_/g, \"\");\n\n  if (!substitutions) {\n    return input;\n  }\n  const safeSubstitutions: MapOfStrings = substitutions; // For Flow.\n\n  // Replace all strings in `safeSubstitutions` with their standardized\n  // counterparts.\n  return Object.keys(safeSubstitutions).reduce((output, substitution) => {\n    const unsubbed = new RegExp(substitution, \"g\");\n    return output.replace(unsubbed, safeSubstitutions[substitution]);\n  }, input);\n}\n","const strings = {\n  selectSomeItems: \"Select...\",\n  allItemsAreSelected: \"All items are selected.\",\n  selectAll: \"Select All\",\n  search: \"Search\",\n  clearSearch: \"Clear Search\",\n  clearSelected: \"Clear Selected\",\n};\n\nexport default function getString(key: string, overrideStrings?): string {\n  return overrideStrings?.[key] || strings[key];\n}\n","import React from \"react\";\n\nconst Cross = () => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    className=\"dropdown-search-clear-icon gray\"\n  >\n    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n  </svg>\n);\n\nexport default Cross;\n","/**\n * This component represents the entire panel which gets dropped down when the\n * user selects the component.  It encapsulates the search filter, the\n * Select-all item, and the list of options.\n */\nimport { css } from \"goober\";\nimport React, { useCallback, useMemo, useState } from \"react\";\n\nimport { debounce } from \"../lib/debounce\";\nimport { filterOptions } from \"../lib/fuzzy-match-utils\";\nimport getString from \"../lib/get-string\";\nimport { Option } from \"../lib/interfaces\";\nimport Cross from \"./cross\";\nimport SelectItem from \"./select-item\";\nimport SelectList from \"./select-list\";\n\ninterface ISelectPanelProps {\n  ItemRenderer?: Function;\n  options: Option[];\n  value: Option[];\n  focusSearchOnOpen: boolean;\n  selectAllLabel?: string;\n  onChange: (selected: Option[]) => void;\n  disabled?: boolean;\n  disableSearch?: boolean;\n  hasSelectAll: boolean;\n  filterOptions?: (options: Option[], filter: string) => Option[];\n  overrideStrings?: { [key: string]: string };\n  ClearIcon?;\n  debounceDuration?: number;\n}\n\nenum FocusType {\n  SEARCH = -1,\n  NONE = 1,\n}\n\nconst SelectSearchContainer = css({\n  width: \"100%\",\n  position: \"relative\",\n  borderBottom: \"1px solid var(--rmsc-border)\",\n  input: {\n    height: \"var(--rmsc-h)\",\n    padding: \"0 var(--rmsc-p)\",\n    width: \"100%\",\n    outline: 0,\n    border: 0,\n  },\n});\n\nconst SearchClearButton = css({\n  cursor: \"pointer\",\n  position: \"absolute\",\n  top: 0,\n  right: 0,\n  bottom: 0,\n  background: \"none\",\n  border: 0,\n  padding: \"0 calc(var(--rmsc-p)/2)\",\n  \"[hidden]\": {\n    display: \"none\",\n  },\n});\n\nexport const SelectPanel = (props: ISelectPanelProps) => {\n  const {\n    onChange,\n    options,\n    value,\n    filterOptions: customFilterOptions,\n    selectAllLabel,\n    ItemRenderer,\n    disabled,\n    disableSearch,\n    focusSearchOnOpen,\n    hasSelectAll,\n    overrideStrings,\n    ClearIcon,\n    debounceDuration,\n  } = props;\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchTextForFilter, setSearchTextForFilter] = useState(\"\");\n  const [focusIndex, setFocusIndex] = useState(\n    focusSearchOnOpen && !disableSearch ? FocusType.SEARCH : FocusType.NONE\n  );\n  const debouncedSearch = useCallback(\n    debounce((query) => setSearchTextForFilter(query), debounceDuration),\n    []\n  );\n\n  const selectAllOption = {\n    label: selectAllLabel || getString(\"selectAll\", overrideStrings),\n    value: \"\",\n  };\n\n  const selectAllValues = (checked) => {\n    const filteredValues = filteredOptions()\n      .filter((o) => !o.disabled)\n      .map((o) => o.value);\n\n    if (checked) {\n      const selectedValues = value.map((o) => o.value);\n      const finalSelectedValues = [...selectedValues, ...filteredValues];\n\n      return options.filter(({ value }) => finalSelectedValues.includes(value));\n    }\n\n    return value.filter((o) => !filteredValues.includes(o.value));\n  };\n\n  const selectAllChanged = (checked: boolean) => {\n    const newOptions = selectAllValues(checked);\n    onChange(newOptions);\n  };\n\n  const handleSearchChange = (e) => {\n    debouncedSearch(e.target.value);\n    setSearchText(e.target.value);\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  const handleClear = () => {\n    setSearchTextForFilter(\"\");\n    setSearchText(\"\");\n  };\n\n  const handleItemClicked = (index: number) => setFocusIndex(index);\n\n  const handleKeyDown = (e) => {\n    switch (e.which) {\n      case 38: // Up Arrow\n        if (e.altKey) {\n          return;\n        }\n        updateFocus(-1);\n        break;\n      case 40: // Down Arrow\n        if (e.altKey) {\n          return;\n        }\n        updateFocus(1);\n        break;\n      default:\n        return;\n    }\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  const handleSearchFocus = () => {\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  const filteredOptions = () =>\n    customFilterOptions\n      ? customFilterOptions(options, searchTextForFilter)\n      : filterOptions(options, searchTextForFilter);\n\n  const updateFocus = (offset: number) => {\n    let newFocus = focusIndex + offset;\n    newFocus = Math.max(1, newFocus);\n    newFocus = Math.min(newFocus, options.length + 1);\n    setFocusIndex(newFocus);\n  };\n\n  const [isAllOptionSelected, hasSelectableOptions] = useMemo(() => {\n    const filteredOptionsList = filteredOptions().filter((o) => !o.disabled);\n    return [\n      filteredOptionsList.every(\n        (o) => value.findIndex((v) => v.value === o.value) !== -1\n      ),\n      filteredOptionsList.length !== 0,\n    ];\n    // eslint-disable-next-line\n  }, [searchText, value]);\n\n  return (\n    <div className=\"select-panel\" role=\"listbox\" onKeyDown={handleKeyDown}>\n      {!disableSearch && (\n        <div className={SelectSearchContainer}>\n          <input\n            autoFocus={focusSearchOnOpen}\n            placeholder={getString(\"search\", overrideStrings)}\n            type=\"text\"\n            aria-describedby={getString(\"search\", overrideStrings)}\n            onKeyDown={(e) => e.stopPropagation()}\n            onChange={handleSearchChange}\n            onFocus={handleSearchFocus}\n            value={searchText}\n          />\n          <button\n            type=\"button\"\n            className={`${SearchClearButton} search-clear-button`}\n            hidden={!searchText}\n            onClick={handleClear}\n            aria-label={getString(\"clearSearch\", overrideStrings)}\n          >\n            {ClearIcon || <Cross />}\n          </button>\n        </div>\n      )}\n\n      {hasSelectAll && hasSelectableOptions && (\n        <SelectItem\n          focused={focusIndex === 1}\n          tabIndex={1}\n          checked={isAllOptionSelected}\n          option={selectAllOption}\n          onSelectionChanged={selectAllChanged}\n          onClick={() => handleItemClicked(0)}\n          itemRenderer={ItemRenderer}\n          disabled={disabled}\n        />\n      )}\n\n      <SelectList\n        {...props}\n        options={filteredOptions()}\n        focusIndex={focusIndex}\n        onClick={(_e, index) => handleItemClicked(index)}\n        ItemRenderer={ItemRenderer}\n        disabled={disabled}\n      />\n    </div>\n  );\n};\n\nexport default SelectPanel;\n","import { css } from \"goober\";\nimport React from \"react\";\n\nimport { Option } from \"../lib/interfaces\";\n\ninterface IDefaultItemRendererProps {\n  checked: boolean;\n  option: Option;\n  disabled?: boolean;\n  onClick;\n}\n\nconst DefaultRenderer = css({\n  \"& input,& span\": {\n    verticalAlign: \"middle\",\n    margin: 0,\n  },\n  span: {\n    display: \"inline-block\",\n    paddingLeft: \"5px\",\n  },\n  \"&.disabled\": {\n    opacity: 0.5,\n  },\n});\n\nconst DefaultItemRenderer = ({\n  checked,\n  option,\n  onClick,\n  disabled,\n}: IDefaultItemRendererProps) => {\n  return (\n    <div\n      className={`${DefaultRenderer} item-renderer ${disabled && \"disabled\"}`}\n    >\n      <input\n        type=\"checkbox\"\n        onChange={onClick}\n        checked={checked}\n        tabIndex={-1}\n        disabled={disabled}\n      />\n      <span>{option.label}</span>\n    </div>\n  );\n};\n\nexport default DefaultItemRenderer;\n","/**\n * This component represents an individual item in the multi-select drop-down\n */\nimport { css } from \"goober\";\nimport React, { useEffect, useRef } from \"react\";\n\nimport { Option } from \"../lib/interfaces\";\nimport DefaultItemRenderer from \"./default-item\";\n\ninterface ISelectItemProps {\n  itemRenderer;\n  option: Option;\n  checked: boolean;\n  focused?: boolean;\n  tabIndex?: number;\n  disabled?: boolean;\n  onSelectionChanged: (checked: boolean) => void;\n  onClick;\n}\n\nconst ItemContainer = css({\n  boxSizing: \"border-box\",\n  cursor: \"pointer\",\n  display: \"block\",\n  padding: \"var(--rmsc-p)\",\n  outline: 0,\n  \"&:hover,&:focus\": {\n    background: \"var(--rmsc-hover)\",\n  },\n  \"&.selected\": {\n    background: \"var(--rmsc-selected)\",\n  },\n});\n\nconst SelectItem = ({\n  itemRenderer: ItemRenderer = DefaultItemRenderer,\n  option,\n  checked,\n  focused,\n  tabIndex,\n  disabled,\n  onSelectionChanged,\n  onClick,\n}: ISelectItemProps) => {\n  const itemRef: any = useRef();\n\n  useEffect(() => {\n    updateFocus();\n    // eslint-disable-next-line\n  }, [focused]);\n\n  const toggleChecked = () => {\n    onSelectionChanged(!checked);\n  };\n\n  const handleClick = (e) => {\n    toggleChecked();\n    onClick(e);\n  };\n\n  const updateFocus = () => {\n    if (focused && !disabled && itemRef) {\n      itemRef.current.focus();\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    switch (e.which) {\n      case 13: // Enter\n      case 32: // Space\n        toggleChecked();\n        break;\n      default:\n        return;\n    }\n    e.preventDefault();\n  };\n\n  return (\n    <label\n      className={`${ItemContainer} select-item ${checked && \"selected\"}`}\n      role=\"option\"\n      aria-selected={checked}\n      tabIndex={tabIndex}\n      ref={itemRef}\n      onKeyDown={handleKeyDown}\n    >\n      <ItemRenderer\n        option={option}\n        checked={checked}\n        onClick={handleClick}\n        disabled={disabled}\n      />\n    </label>\n  );\n};\n\nexport default SelectItem;\n","/**\n * This component represents an unadorned list of SelectItem (s).\n */\nimport { css } from \"goober\";\nimport React from \"react\";\n\nimport { Option } from \"../lib/interfaces\";\nimport SelectItem from \"./select-item\";\n\ninterface ISelectListProps {\n  focusIndex: number;\n  ItemRenderer?: Function;\n  options: Option[];\n  value: Option[];\n  onChange: (selected: Option[]) => void;\n  onClick: Function;\n  disabled?: boolean;\n}\n\nconst SelectListUl = css({\n  margin: 0,\n  paddingLeft: 0,\n  li: {\n    listStyle: \"none\",\n    margin: 0,\n  },\n});\n\nconst skipIndex = 2;\n\nconst SelectList = ({\n  value,\n  onChange,\n  disabled,\n  ItemRenderer,\n  options,\n  focusIndex,\n  onClick,\n}: ISelectListProps) => {\n  const handleSelectionChanged = (option: Option, checked: boolean) => {\n    if (disabled) {\n      return;\n    }\n    onChange(\n      checked\n        ? [...value, option]\n        : value.filter((o: any) => o.value !== option.value)\n    );\n  };\n\n  return (\n    <ul className={SelectListUl}>\n      {options.map((o: any, i) => {\n        const tabIndex = i + skipIndex;\n        return (\n          <li key={o.hasOwnProperty(\"key\") ? o.key : i}>\n            <SelectItem\n              focused={focusIndex === tabIndex}\n              tabIndex={tabIndex}\n              option={o}\n              onSelectionChanged={(c) => handleSelectionChanged(o, c)}\n              checked={value.find((s) => s.value === o.value) ? true : false}\n              onClick={(e) => onClick(e, tabIndex)}\n              itemRenderer={ItemRenderer}\n              disabled={o.disabled || disabled}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default SelectList;\n","export const debounce = (func, wait) => {\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      func.apply(null, args);\n    }, wait);\n  };\n};\n","import React from \"react\";\n\ninterface ArrowProps {\n  expanded?: boolean;\n}\n\nexport default function Arrow({ expanded }: ArrowProps) {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      className=\"dropdown-heading-dropdown-arrow gray\"\n    >\n      <path d={expanded ? \"M18 15 12 9 6 15\" : \"M6 9L12 15 18 9\"} />\n    </svg>\n  );\n}\n","import { css } from \"goober\";\nimport React from \"react\";\n\nconst Spinner = css({\n  animation: \"rotate 2s linear infinite\",\n\n  \"& .path\": {\n    stroke: \"var(--rmsc-border)\",\n    strokeWidth: \"4px\",\n    strokeLinecap: \"round\",\n    animation: \"dash 1.5s ease-in-out infinite\",\n  },\n\n  \"@keyframes rotate\": {\n    \"100%\": {\n      transform: \"rotate(360deg)\",\n    },\n  },\n\n  \"@keyframes dash\": {\n    \"0%\": {\n      strokeDasharray: \"1,150\",\n      strokeDashoffset: 0,\n    },\n    \"50%\": {\n      strokeDasharray: \"90,150\",\n      strokeDashoffset: \"-35\",\n    },\n    \"100%\": {\n      strokeDasharray: \"90,150\",\n      strokeDashoffset: \"-124\",\n    },\n  },\n});\n\nfunction Loading({ size = 24 }) {\n  return (\n    <span\n      style={{\n        width: size,\n        marginRight: \"0.2rem\",\n      }}\n    >\n      <svg\n        width={size}\n        height={size}\n        className={Spinner}\n        viewBox=\"0 0 50 50\"\n        style={{ display: \"inline\", verticalAlign: \"middle\" }}\n      >\n        <circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" className=\"path\"></circle>\n      </svg>\n    </span>\n  );\n}\n\nexport default Loading;\n","/**\n * A generic dropdown component.  It takes the children of the component\n * and hosts it in the component.  When the component is selected, it\n * drops-down the contentComponent and applies the contentProps.\n */\nimport { css } from \"goober\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport getString from \"../lib/get-string\";\nimport Cross from \"../select-panel/cross\";\nimport Arrow from \"./arrow\";\nimport Loading from \"./loading\";\n\ninterface IDropdownProps {\n  children?;\n  contentComponent;\n  contentProps: object;\n  isLoading?: boolean;\n  disabled?: boolean;\n  shouldToggleOnHover?: boolean;\n  labelledBy?: string;\n  onMenuToggle?;\n  ArrowRenderer?;\n  ClearSelectedIcon?;\n  defaultIsOpen?: boolean;\n  isOpen?: boolean;\n}\n\nconst PanelContainer = css({\n  position: \"absolute\",\n  zIndex: 1,\n  top: \"100%\",\n  width: \"100%\",\n  paddingTop: \"8px\",\n  \".panel-content\": {\n    maxHeight: \"300px\",\n    overflowY: \"auto\",\n    borderRadius: \"var(--rmsc-radius)\",\n    background: \"var(--rmsc-bg)\",\n    boxShadow: \"0 0 0 1px rgba(0, 0, 0, 0.1), 0 4px 11px rgba(0, 0, 0, 0.1)\",\n  },\n});\n\nconst DropdownContainer = css({\n  position: \"relative\",\n  outline: 0,\n  backgroundColor: \"var(--rmsc-bg)\",\n  border: \"1px solid var(--rmsc-border)\",\n  borderRadius: \"var(--rmsc-radius)\",\n  \"&:focus-within\": {\n    boxShadow: \"var(--rmsc-main) 0 0 0 1px\",\n    borderColor: \"var(--rmsc-main)\",\n  },\n});\n\nconst DropdownHeading = css({\n  position: \"relative\",\n  padding: \"0 var(--rmsc-p)\",\n  display: \"flex\",\n  alignItems: \"center\",\n  width: \"100%\",\n  height: \"var(--rmsc-h)\",\n  cursor: \"default\",\n  outline: 0,\n  \".dropdown-heading-value\": {\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n    flex: 1,\n  },\n});\n\nconst ClearSelectedButton = css({\n  cursor: \"pointer\",\n  background: \"none\",\n  border: 0,\n  padding: 0,\n  display: \"flex\",\n});\n\nconst Dropdown = ({\n  children,\n  contentComponent: ContentComponent,\n  contentProps,\n  isLoading,\n  disabled,\n  shouldToggleOnHover,\n  labelledBy,\n  onMenuToggle,\n  ArrowRenderer,\n  ClearSelectedIcon,\n  defaultIsOpen,\n  isOpen,\n}: IDropdownProps) => {\n  const [isInternalExpand, setIsInternalExpand] = useState(true);\n  const [expanded, setExpanded] = useState(defaultIsOpen);\n  const [hasFocus, setHasFocus] = useState(false);\n  const FinalArrow = ArrowRenderer || Arrow;\n\n  const wrapper: any = useRef();\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    onMenuToggle && onMenuToggle(expanded);\n  }, [expanded]);\n\n  useEffect(() => {\n    if (defaultIsOpen === undefined && typeof isOpen === \"boolean\") {\n      setIsInternalExpand(false);\n      setExpanded(isOpen);\n    }\n  }, [isOpen]);\n\n  const handleKeyDown = (e) => {\n    if (isInternalExpand) {\n      switch (e.which) {\n        case 27: // Escape\n        case 38: // Up Arrow\n          setExpanded(false);\n          wrapper?.current?.focus();\n          break;\n        case 32: // Space\n        case 13: // Enter Key\n        case 40: // Down Arrow\n          setExpanded(true);\n          break;\n        default:\n          return;\n      }\n    }\n    e.preventDefault();\n  };\n\n  const handleHover = (iexpanded: boolean) => {\n    isInternalExpand && shouldToggleOnHover && setExpanded(iexpanded);\n  };\n\n  const handleFocus = () => !hasFocus && setHasFocus(true);\n\n  const handleBlur = (e) => {\n    if (!e.currentTarget.contains(e.relatedTarget) && isInternalExpand) {\n      setHasFocus(false);\n      setExpanded(false);\n    }\n  };\n\n  const handleMouseEnter = () => handleHover(true);\n\n  const handleMouseLeave = () => handleHover(false);\n\n  const toggleExpanded = () => {\n    isInternalExpand && setExpanded(isLoading || disabled ? false : !expanded);\n  };\n\n  const handleClearSelected = (e) => {\n    e.stopPropagation();\n    contentProps[\"onChange\"]([]);\n    isInternalExpand && setExpanded(false);\n  };\n\n  return (\n    <div\n      tabIndex={0}\n      className={`${DropdownContainer} dropdown-container`}\n      aria-labelledby={labelledBy}\n      aria-expanded={expanded}\n      aria-readonly={true}\n      aria-disabled={disabled}\n      ref={wrapper}\n      onKeyDown={handleKeyDown}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <div\n        className={`${DropdownHeading} dropdown-heading`}\n        onClick={toggleExpanded}\n      >\n        <div className=\"dropdown-heading-value\">{children}</div>\n        {isLoading && <Loading />}\n        {contentProps[\"value\"].length > 0 && (\n          <button\n            type=\"button\"\n            className={`${ClearSelectedButton} clear-selected-button`}\n            onClick={handleClearSelected}\n            aria-label={getString(\n              \"clearSelected\",\n              contentProps[\"overrideStrings\"]\n            )}\n          >\n            {ClearSelectedIcon || <Cross />}\n          </button>\n        )}\n        <FinalArrow expanded={expanded} />\n      </div>\n      {expanded && (\n        <div className={`${PanelContainer} dropdown-content`}>\n          <div className=\"panel-content\">\n            <ContentComponent {...contentProps} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import React from \"react\";\n\nimport getString from \"../lib/get-string\";\n\nconst DropdownHeader = ({ value, options, valueRenderer, overrideStrings }) => {\n  const noneSelected = value.length === 0;\n  const allSelected = value.length === options.length;\n  const customText = valueRenderer && valueRenderer(value, options);\n\n  const getSelectedText = () => value.map((s) => s.label).join(\", \");\n\n  return noneSelected ? (\n    <span className=\"gray\">\n      {customText || getString(\"selectSomeItems\", overrideStrings)}\n    </span>\n  ) : (\n    <span>\n      {customText ||\n        (allSelected\n          ? getString(\"allItemsAreSelected\", overrideStrings)\n          : getSelectedText())}\n    </span>\n  );\n};\n\nexport default DropdownHeader;\n","import { css } from \"goober\";\nimport React from \"react\";\n\nimport { ISelectProps } from \"../lib/interfaces\";\nimport SelectPanel from \"../select-panel\";\nimport Dropdown from \"./dropdown\";\nimport DropdownHeader from \"./header\";\n\nconst MultiSelectBox = css({\n  \"--rmscMain\": \"#4285f4\",\n  \"--rmscHover\": \"#f1f3f5\",\n  \"--rmscSelected\": \"#e2e6ea\",\n  \"--rmscBorder\": \"#ccc\",\n  \"--rmscGray\": \"#aaa\",\n  \"--rmscBg\": \"#fff\",\n  \"--rmscP\": \"10px\",\n  \"--rmscRadius\": \"4px\",\n  \"--rmscH\": \"38px\",\n\n  \"*\": {\n    boxSizing: \"border-box\",\n    transition: \"all 0.2s ease\",\n  },\n  \".gray\": {\n    color: \"var(--rmsc-gray)\",\n  },\n});\n\nconst MultiSelect = ({\n  focusSearchOnOpen = true,\n  hasSelectAll = true,\n  shouldToggleOnHover,\n  className = \"multi-select\",\n  options,\n  value,\n  valueRenderer,\n  overrideStrings,\n  onChange,\n  disabled,\n  ItemRenderer,\n  ArrowRenderer,\n  selectAllLabel,\n  isLoading,\n  disableSearch,\n  filterOptions,\n  labelledBy,\n  onMenuToggle,\n  ClearIcon,\n  debounceDuration = 300,\n  ClearSelectedIcon,\n  defaultIsOpen,\n  isOpen,\n}: ISelectProps) => {\n  const nvalue = value || [];\n  return (\n    <div className={`${MultiSelectBox} ${className}`}>\n      <Dropdown\n        isLoading={isLoading}\n        contentComponent={SelectPanel}\n        shouldToggleOnHover={shouldToggleOnHover}\n        contentProps={{\n          ItemRenderer,\n          options,\n          value: nvalue,\n          hasSelectAll,\n          selectAllLabel,\n          onChange,\n          disabled,\n          disableSearch,\n          focusSearchOnOpen,\n          filterOptions,\n          overrideStrings,\n          ClearIcon,\n          debounceDuration,\n        }}\n        disabled={disabled}\n        labelledBy={labelledBy}\n        onMenuToggle={onMenuToggle}\n        ArrowRenderer={ArrowRenderer}\n        ClearSelectedIcon={ClearSelectedIcon}\n        defaultIsOpen={defaultIsOpen}\n        isOpen={isOpen}\n      >\n        <DropdownHeader\n          value={nvalue}\n          options={options}\n          valueRenderer={valueRenderer}\n          overrideStrings={overrideStrings}\n        />\n      </Dropdown>\n    </div>\n  );\n};\n\nexport default MultiSelect;\n"],"names":["typeaheadSimilarity","a","b","aLength","length","bLength","table","indexOf","x","y","Math","max","cleanUpText","input","substitutions","toUpperCase","replace","safeSubstitutions","Object","keys","reduce","output","substitution","unsubbed","RegExp","strings","selectSomeItems","allItemsAreSelected","selectAll","search","clearSearch","clearSelected","getString","key","overrideStrings","FocusType","Cross","React","width","height","fill","stroke","strokeWidth","className","x1","y1","x2","y2","DefaultRenderer","css","verticalAlign","margin","span","display","paddingLeft","opacity","DefaultItemRenderer","option","disabled","type","onChange","onClick","checked","tabIndex","label","ItemContainer","boxSizing","cursor","padding","outline","background","SelectItem","itemRenderer","ItemRenderer","focused","onSelectionChanged","itemRef","useRef","useEffect","updateFocus","toggleChecked","current","focus","role","ref","onKeyDown","e","which","preventDefault","SelectListUl","li","listStyle","SelectList","value","focusIndex","options","map","o","i","hasOwnProperty","c","filter","find","s","SelectSearchContainer","position","borderBottom","border","SearchClearButton","top","right","bottom","SelectPanel","props","func","wait","timeout","customFilterOptions","filterOptions","selectAllLabel","disableSearch","focusSearchOnOpen","hasSelectAll","ClearIcon","debounceDuration","useState","searchText","setSearchText","searchTextForFilter","setSearchTextForFilter","SEARCH","NONE","setFocusIndex","debouncedSearch","useCallback","query","args","clearTimeout","setTimeout","apply","selectAllOption","handleItemClicked","index","filteredOptions","cleanFilter","score","pair","sort","offset","newFocus","min","useMemo","filteredOptionsList","every","findIndex","v","isAllOptionSelected","hasSelectableOptions","altKey","stopPropagation","autoFocus","placeholder","target","onFocus","hidden","newOptions","filteredValues","selectedValues","finalSelectedValues","includes","selectAllValues","_e","Arrow","d","expanded","Spinner","animation","strokeLinecap","transform","strokeDasharray","strokeDashoffset","Loading","size","style","marginRight","viewBox","cx","cy","r","PanelContainer","zIndex","paddingTop","maxHeight","overflowY","borderRadius","boxShadow","DropdownContainer","backgroundColor","borderColor","DropdownHeading","alignItems","overflow","textOverflow","whiteSpace","flex","ClearSelectedButton","Dropdown","children","ContentComponent","contentComponent","contentProps","isLoading","shouldToggleOnHover","labelledBy","onMenuToggle","ArrowRenderer","ClearSelectedIcon","defaultIsOpen","isOpen","isInternalExpand","setIsInternalExpand","setExpanded","hasFocus","setHasFocus","FinalArrow","wrapper","undefined","handleHover","iexpanded","onBlur","currentTarget","contains","relatedTarget","onMouseEnter","onMouseLeave","DropdownHeader","valueRenderer","noneSelected","allSelected","customText","join","MultiSelectBox","transition","color","nvalue"],"mappings":"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"}